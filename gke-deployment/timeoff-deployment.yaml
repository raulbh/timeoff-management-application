apiVersion: apps/v1
kind: Deployment
metadata:
  name: timeoff-deployment
spec:
  selector:
    matchLabels:
      app: timeoff
  template:
    metadata:
      labels:
        app: timeoff
    spec:
      containers:
      - name: timeoff
        image: us-central1-docker.pkg.dev/project-01-raulbh/gcp-repo/timeoff:8a3d168
        resources:
          requests:
            memory: "32Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 3000
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: 3000
        #   failureThreshold: 3
        #   periodSeconds: 60


---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: timeoff-deployment
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: timeoff-deployment
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 50
---
# apiVersion: cloud.google.com/v1
# kind: BackendConfig
# metadata:
#   name: timeoff-backendconfig
# spec:
#   healthCheck:
#     checkIntervalSec: 60
#     timeoutSec: 60
#     healthyThreshold: 1
#     unhealthyThreshold: 10
#     type: HTTP
#     requestPath: /
#     port: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: timeoff-service
  annotations:
    # cloud.google.com/backend-config: '{"ports": {"3000":"timeoff-backendconfig"}}'
    # cloud.google.com/neg: '{"ingress": true}'
spec:
  type: ClusterIP
  selector:
    app: timeoff
  ports:
  - port: 80
    targetPort: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: timeoff-ingress
  labels:
    name: timeoff-ingress
spec:
  rules:
  - http:
      paths:
      - pathType: ImplementationSpecific
        path: "/"
        backend:
          service:
            name: timeoff-service
            port: 
              number: 80

