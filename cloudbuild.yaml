# [Start Cloudbuild]
# [Start Terraform steps init, plan, apply]
steps:
- id: 'Show branch name'
  name: alpine
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        echo "########################"
        echo "$BRANCH_NAME"
        echo "#########################"

- id: 'Executing terraform init'
  name: hashicorp/terraform:1.2.3
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        cd ./infra
        terraform init

- id: 'Executing_terraform_plan'
  name: hashicorp/terraform:1.2.3
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        cd ./infra
        terraform plan -out=tfplan

- id: 'Executing_terraform_apply'
  name: hashicorp/terraform:1.2.3
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        cd ./infra
        terraform apply tfplan
  timeout: 2400s

#[End Terraform steps]
#[Start building the Docker image and pushing]
# This step builds the container image and tag the image $PROJECT_ID and SHORT_SHA
# are replaced by Cloudbuild default substitutions.
- id: 'Build the container image'
  name: 'gcr.io/cloud-builders/docker'
  waitFor: ['Executing_terraform_apply']
  args:
  - 'build'
  - '-t'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/gcp-repo/timeoff:$SHORT_SHA'
  - '.'
# This step pushes the image to container registry.
- id: 'Pushing the image to container registry'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/gcp-repo/timeoff:$SHORT_SHA'

#[Ends taging and pushing the image]
substitutions:
  _REGISTRY: gcp-repo